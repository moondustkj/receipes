import React from 'react';
import './index.css';
import { useNavigate } from 'react-router';

const ReceipeCard = ({ recipe, handleBookmark }) => {
    const navigate = useNavigate();

    const handleNavigate = (item) => {
        console.log('navigate called');
        navigate(`/recipe/${item.id}`);
    }
    return <div className='card relative block' onClick={() => handleNavigate(recipe)}>
        <img src={recipe.img} alt='recipe-image'
            className='w-full' />
        <div className='bottom'>
            <div className='flex justify-between'>
                <h4>{recipe.title}</h4>
                <span className='flex items-center gap-[5px]'>
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g opacity="0.5">
                            <path d="M10 7.33333H8.66666V4.66666C8.66666 4.48985 8.59643 4.32028 8.4714 4.19526C8.34638 4.07023 8.17681 3.99999 8 3.99999C7.82319 3.99999 7.65362 4.07023 7.52859 4.19526C7.40357 4.32028 7.33333 4.48985 7.33333 4.66666V8C7.33333 8.17681 7.40357 8.34638 7.52859 8.4714C7.65362 8.59642 7.82319 8.66666 8 8.66666H10C10.1768 8.66666 10.3464 8.59642 10.4714 8.4714C10.5964 8.34638 10.6667 8.17681 10.6667 8C10.6667 7.82318 10.5964 7.65361 10.4714 7.52859C10.3464 7.40357 10.1768 7.33333 10 7.33333ZM8 1.33333C6.68146 1.33333 5.39252 1.72432 4.2962 2.45686C3.19987 3.18941 2.34539 4.2306 1.8408 5.44877C1.33622 6.66695 1.20419 8.00739 1.46143 9.3006C1.71866 10.5938 2.3536 11.7817 3.28595 12.714C4.2183 13.6464 5.40619 14.2813 6.6994 14.5386C7.9926 14.7958 9.33305 14.6638 10.5512 14.1592C11.7694 13.6546 12.8106 12.8001 13.5431 11.7038C14.2757 10.6075 14.6667 9.31854 14.6667 8C14.6667 7.12452 14.4942 6.25761 14.1592 5.44877C13.8242 4.63993 13.3331 3.90501 12.714 3.28595C12.095 2.66689 11.3601 2.17583 10.5512 1.8408C9.74238 1.50577 8.87548 1.33333 8 1.33333V1.33333ZM8 13.3333C6.94516 13.3333 5.91402 13.0205 5.03696 12.4345C4.15989 11.8485 3.47631 11.0155 3.07264 10.041C2.66897 9.06643 2.56336 7.99408 2.76914 6.95951C2.97493 5.92495 3.48288 4.97464 4.22876 4.22876C4.97464 3.48288 5.92495 2.97493 6.95952 2.76914C7.99408 2.56335 9.06644 2.66897 10.041 3.07264C11.0155 3.4763 11.8485 4.15989 12.4345 5.03695C13.0205 5.91402 13.3333 6.94516 13.3333 8C13.3333 9.41448 12.7714 10.771 11.7712 11.7712C10.771 12.7714 9.41449 13.3333 8 13.3333V13.3333Z" fill="#3A3A3B" />
                        </g>
                    </svg>
                    <p className='fs-14'>{recipe.time / 60} min</p>
                </span>
            </div>
            <div className='ingredients-wrapper'>
                {
                    recipe.ingredients.slice(0, 3)?.map((ing, i) => (
                        <>
                            <span className='ingredients'  key={ing}>{ing}</span>
                            {i === recipe.ingredients.slice(0, 3).length - 1 ? '' : <span className='seperator'>
                                <svg width="2" height="15" viewBox="0 0 2 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <line x1="1" y1="13.5" x2="1" y2="1.5" stroke="#2EACAA" strokeWidth="2" strokeLinecap="round" />
                                </svg>
                            </span>}
                        </>
                    )) || ''
                }
            </div>
        </div>
        <button className='bookmark btn' onClick={(e) => handleBookmark(e, recipe)}>
            {!recipe.isBookmarked ?
                <svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M16 2H7.99999C7.20434 2 6.44128 2.31607 5.87867 2.87868C5.31606 3.44129 4.99999 4.20435 4.99999 5V21C4.99929 21.1762 5.04517 21.3495 5.13297 21.5023C5.22077 21.655 5.34739 21.7819 5.49999 21.87C5.65201 21.9578 5.82446 22.004 5.99999 22.004C6.17553 22.004 6.34797 21.9578 6.49999 21.87L12 18.69L17.5 21.87C17.6524 21.9564 17.8248 22.0012 18 22C18.1752 22.0012 18.3476 21.9564 18.5 21.87C18.6526 21.7819 18.7792 21.655 18.867 21.5023C18.9548 21.3495 19.0007 21.1762 19 21V5C19 4.20435 18.6839 3.44129 18.1213 2.87868C17.5587 2.31607 16.7956 2 16 2ZM17 19.27L12.5 16.67C12.348 16.5822 12.1755 16.536 12 16.536C11.8245 16.536 11.652 16.5822 11.5 16.67L6.99999 19.27V5C6.99999 4.73478 7.10535 4.48043 7.29289 4.29289C7.48042 4.10536 7.73478 4 7.99999 4H16C16.2652 4 16.5196 4.10536 16.7071 4.29289C16.8946 4.48043 17 4.73478 17 5V19.27Z" fill="#3A3A3B" />
                </svg>
                :
                <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect width="32" height="32" rx="6" fill="white" fillOpacity="0.8" />
                    <path d="M20 6H12C11.2043 6 10.4413 6.31607 9.87867 6.87868C9.31606 7.44129 8.99999 8.20435 8.99999 9V25C8.99929 25.1762 9.04517 25.3495 9.13297 25.5023C9.22077 25.655 9.34739 25.7819 9.49999 25.87C9.65201 25.9578 9.82446 26.004 9.99999 26.004C10.1755 26.004 10.348 25.9578 10.5 25.87L16 22.69L21.5 25.87C21.6524 25.9564 21.8248 26.0012 22 26C22.1752 26.0012 22.3476 25.9564 22.5 25.87C22.6526 25.7819 22.7792 25.655 22.867 25.5023C22.9548 25.3495 23.0007 25.1762 23 25V9C23 8.20435 22.6839 7.44129 22.1213 6.87868C21.5587 6.31607 20.7956 6 20 6ZM21 23.27L16.5 20.67C16.348 20.5822 16.1755 20.536 16 20.536C15.8245 20.536 15.652 20.5822 15.5 20.67L11 23.27V9C11 8.73478 11.1053 8.48043 11.2929 8.29289C11.4804 8.10536 11.7348 8 12 8H20C20.2652 8 20.5196 8.10536 20.7071 8.29289C20.8946 8.48043 21 8.73478 21 9V23.27Z" fill="#ED6A32" fillOpacity="0.8" />
                    <path d="M21.5 7.5H10.5V24.5L16.5 21.5L22 25L21.5 7.5Z" fill="#F0875A" />
                </svg>
            }

        </button>
    </div>
}

export default ReceipeCard;